@page "/withdraw/{AccountNumber:int}/{CardNumber:int}"
@using Metafar.Challenge.WebApp.ViewModel
@inject NavigationManager Navigation
@inject WithdrawViewModel withdrawViewModel
@rendermode InteractiveServer

<PageTitle>Withdraw</PageTitle>

<div class="container mt-5">
    @if (!showResult)
    {
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="card-title">Withdraw</h3>
                    </div>

                    <div class="card-body">
                        <p><strong>Número cuenta:</strong> @AccountNumber</p>
                        <p><strong>NNúmero Tarjeta::</strong> @CardNumber</p>
                        <div class="mb-3">
                            <label for="amount" class="form-label">Ingrese un monto:</label>
                            <input type="number" id="amount" class="form-control" @bind="Amount"/>
                        </div>
                        <button class="btn btn-primary" @onclick="WithdrawFromAccount">Extraer</button>
                    </div>
                
                </div>
            </div>
        </div>
    }

    @if (showResult)
    {
        <div class="row justify-content-center mt-4">
            <div class="col-md-6">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h3 class="card-title">Resumen de extracción</h3>
                    </div>
                    <div class="card-body">
                        <p><strong>Código Operación:</strong> @withdrawViewModel.OperationId</p>
                        <p><strong>Número cuenta:</strong> @withdrawViewModel.AccountNumber</p>
                        <p><strong>Número Tarjeta:</strong> @withdrawViewModel.CardNumber</p>
                        <p><strong>Saldo:</strong> @withdrawViewModel.Balance</p>
                        <p><strong>Fecha de Operación:</strong> @withdrawViewModel.OperationDate</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row justify-content-center mt-4">
        <div class="col-md-6 text-center">
            <button class="btn btn-secondary" @onclick="ReturnToAccount">Return to Account</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int AccountNumber { get; set; }
    [Parameter]
    public int CardNumber { get; set; }
    private double Amount { get; set; }
    private bool showResult = false;

    private async Task WithdrawFromAccount()
    {
        await withdrawViewModel.WithdrawFromAccountAsync(CardNumber, Amount);
        showResult = true;
    }

    private void ReturnToAccount()
    {
        Navigation.NavigateTo($"/account/{CardNumber}");
    }
}